{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/sabbour/customer-loyalty.git"
    },
    "repositoryBranch": {
      "type": "string",
      "defaultValue": "master"
    },
    "textAnalyticsSkuName": {
      "type": "string",
      "allowedValues": [
        "F0",
        "S1",
        "S2",
        "S3",
        "S4"
      ],
      "defaultValue": "F0"
    },
    "bingSpeechSkuName": {
      "type": "string",
      "allowedValues": [
        "F0",
        "S0"
      ],
      "defaultValue": "F0"
    }
  },
  "variables": {
    "storageName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "functionAppName": "[concat('funcapp', uniqueString(resourceGroup().id))]",
    "functionDynamicPlanName": "[concat('dynasp', uniqueString(resourceGroup().id))]",
    "logicAppName": "[concat('logicapp', uniqueString(resourceGroup().id))]",
    "textAnalyticsName": "[concat('textAnalytics', uniqueString(resourceGroup().id))]",
    "speechToTextName": "[concat('speechToText', uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[concat('asp', uniqueString(resourceGroup().id))]",
    "apiAppName": "[concat('customerApi', uniqueString(resourceGroup().id))]",
    "feedbackWebAppName": "[concat('feedbackWeb', uniqueString(resourceGroup().id))]",
    "apiMgmtName": "[concat('apim', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Storage Account"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "name": "[variables('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-01",
      "dependsOn": [],
      "tags": {
        "displayName": "Logic App Workflow"
      },
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "actions": {},
          "outputs": {},
          "parameters": {},
          "triggers": {}
        },
        "parameters": {}
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "sku": {
        "name": "[parameters('bingSpeechSkuName')]"
      },
      "kind": "Bing.Speech",
      "name": "[variables('speechToTextName')]",
      "tags": {
        "displayName": "Bing Speech To Text"
      },
      "apiVersion": "2016-02-01-preview",
      "location": "global",
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "sku": {
        "name": "[parameters('textAnalyticsSkuName')]"
      },
      "kind": "TextAnalytics",
      "name": "[variables('textAnalyticsName')]",
      "tags": {
        "displayName": "Text Analytics"
      },
      "apiVersion": "2016-02-01-preview",
      "location": "westus",
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "tags": {
        "displayName": "Function Dynamic App Service Plan"
      },
      "kind": "functionapp",
      "name": "[variables('functionDynamicPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('functionDynamicPlanName')]",
        "numberOfWorkers": 0
      },
      "resources": [
        {
          "type": "Microsoft.Web/sites",
          "kind": "functionapp",
          "name": "[variables('functionAppName')]",
          "apiVersion": "2016-03-01",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Function App"
          },
          "properties": {
            "name": "[variables('functionAppName')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionDynamicPlanName'))]",           
            "siteConfig": {
              "appSettings": [
                {
                  "name": "QueueStorageConnection",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                },
                {
                  "name": "AzureWebJobsDashboard",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                },
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                },
                {
                  "name": "FUNCTIONS_EXTENSION_VERSION",
                  "value": "latest"
                },
                {
                  "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                },
                {
                  "name": "WEBSITE_CONTENTSHARE",
                  "value": "[concat(toLower(variables('functionAppName')), '1fddb6508b60')]"
                },
                {
                  "name": "Project",
                  "value": "FunctionApp/FunctionApp.csproj"
                }
              ],
              "cors": {
                "allowedOrigins": [
                  "*"
                ]
              }
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('functionDynamicPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
          ],
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "web",
              "type": "sourcecontrols",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
              ],
              "tags": {
                "displayName": "Git integration Function App"
              },
              "properties": {
                "repoUrl": "[parameters('repositoryUrl')]",
                "branch": "[parameters('repositoryBranch')]",
                "IsManualIntegration": true
              }
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 0
      },
      "tags": {
        "displayName": "App Service Plan"
      },
      "kind": "app",
      "name": "[variables('appServicePlanName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "numberOfWorkers": 0
      },
      "resources": [
        {
          "name": "[variables('feedbackWebAppName')]",
          "type": "Microsoft.Web/sites",
          "location": "[resourceGroup().location]",
          "kind": "app",
          "apiVersion": "2015-08-01",
          "tags": {
            "displayName": "Feedback Web App"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "[resourceId('Microsoft.CognitiveServices/accounts', variables('speechToTextName'))]"
          ],
          "tags": {
            "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "Resource",
            "displayName": "Feedback Web App"
          },
          "properties": {
            "name": "[variables('feedbackWebAppName')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
            "siteConfig": {
              "appSettings": [
                {
                  "name": "SpeechAPIKey",
                  "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('speechToTextName')), '2016-02-01-preview').key1]"
                },
                {
                  "name": "FunctionAppUrl",
                  "value": "[reference(resourceId('Microsoft.Web/sites',variables('functionAppName')), '2015-08-01').defaultHostName]"
                },
                {
                  "name": "Project",
                  "value": "FeedbackWeb/FeedbackWeb.csproj"
                }
              ]
            }
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "web",
              "type": "sourcecontrols",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('feedbackWebAppName'))]"
              ],
              "properties": {
                "repoUrl": "[parameters('repositoryUrl')]",
                "branch": "[parameters('repositoryBranch')]",
                "IsManualIntegration": true
              },
              "tags": {
                "displayName": "Git integration Feedback Web App"
              }
            }
          ]
        },
        {
          "name": "[variables('apiAppName')]",
          "type": "Microsoft.Web/sites",
          "location": "[resourceGroup().location]",
          "kind": "api",
          "apiVersion": "2015-08-01",
          "tags": {
            "displayName": "Customer Details API App"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          ],
          "tags": {
            "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "Resource",
            "displayName": "Customer Details API App"
          },
          "properties": {
            "name": "[variables('apiAppName')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
            "siteConfig": {
              "appSettings": [
                {
                  "name": "Project",
                  "value": "CustomerAPI/CustomerAPI.csproj"
                }
              ],
              "apiDefinition": {
                "url": "/swagger/docs/v1"
              },
              "cors": {
                "allowedOrigins": [
                  "*"
                ]
              }
            }
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "web",
              "type": "sourcecontrols",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
              ],
              "tags": {
                "displayName": "Git integration Customer Details API App"
              },
              "properties": {
                "repoUrl": "[parameters('repositoryUrl')]",
                "branch": "[parameters('repositoryBranch')]",
                "IsManualIntegration": true
              }
            }
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionDynamicPlanName'))]"
      ]
    },
    {
      "name": "[variables('apiMgmtName')]",
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2016-07-07",
      "tags": {
        "displayName": "API Management Gateway"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publisherEmail": "customerloyalty@publisher.com",
        "publisherName": "Customer Loyalty"
      },
      "sku": {
        "name": "Developer",
        "capacity": 1
      }
    }
  ],
  "outputs": {
    "functionAppFQDN": {
      "value": "[reference(resourceId('Microsoft.Web/sites',variables('functionAppName')), '2015-08-01').defaultHostName]",
      "type": "string"
    },
    "feedbackAppFQDN": {
      "value": "[reference(resourceId('Microsoft.Web/sites',variables('feedbackWebAppName')), '2015-08-01').defaultHostName]",
      "type": "string"
    },
    "customerAPIFQDN": {
      "value": "[reference(resourceId('Microsoft.Web/sites',variables('apiAppName')), '2015-08-01').defaultHostName]",
      "type": "string"
    },
    "apiMgmtFQDN": {
      "value": "[reference(resourceId('Microsoft.ApiManagement/service',variables('apiMgmtName')), '2016-07-07').runtimeUrl]",
      "type": "string"
    },
    "SpeechAPIKey": {
      "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('speechToTextName')), '2016-02-01-preview').key1]",
      "type": "string"
    },
    "TextAnalyticsAPIKey": {
      "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('textAnalyticsName')), '2016-02-01-preview').key1]",
      "type": "string"
    }
  }
}
